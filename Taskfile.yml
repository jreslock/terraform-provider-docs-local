version: '3'

vars:
  GOFLAGS: "-buildvcs=false"
  BINARY_NAME: terraform-provider-docs-local
  GO_VERSION: '1.24'
  ARTIFACTS_DIR: artifacts

tasks:
  default:
    cmds:
      - task --list-all
    silent: true

  build:
    desc: Build the binary
    deps: [clean]
    cmds:
      - mkdir -p {{.ARTIFACTS_DIR}}
      - go build {{.GOFLAGS}} -o {{.ARTIFACTS_DIR}}/{{.BINARY_NAME}} main.go

  build-all:
    desc: Build for multiple architectures
    deps: [clean]
    cmds:
      - mkdir -p {{.ARTIFACTS_DIR}}
      - GOOS=darwin GOARCH=amd64 go build {{.GOFLAGS}} -o {{.ARTIFACTS_DIR}}/{{.BINARY_NAME}}-darwin-amd64 main.go
      - GOOS=darwin GOARCH=arm64 go build {{.GOFLAGS}} -o {{.ARTIFACTS_DIR}}/{{.BINARY_NAME}}-darwin-arm64 main.go
      - GOOS=linux GOARCH=amd64 go build {{.GOFLAGS}} -o {{.ARTIFACTS_DIR}}/{{.BINARY_NAME}}-linux-amd64 main.go
      - GOOS=linux GOARCH=arm64 go build {{.GOFLAGS}} -o {{.ARTIFACTS_DIR}}/{{.BINARY_NAME}}-linux-arm64 main.go
      - GOOS=windows GOARCH=amd64 go build {{.GOFLAGS}} -o {{.ARTIFACTS_DIR}}/{{.BINARY_NAME}}-windows-amd64.exe main.go

  test:
    desc: Run tests
    cmds:
      - go test {{.GOFLAGS}} ./...

  lint:
    desc: Run linters
    cmds:
      # Add the workspace directory to the safe directories list
      # to avoid issues with git in CI/CD environments
      # This is necessary for tools like golangci-lint that use git
      # to check for modified files
      - git config --global --add safe.directory /workspace
      - go vet {{.GOFLAGS}} ./...
      - golangci-lint run

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf {{.ARTIFACTS_DIR}}

  version:
    desc: Show current version
    cmds:
      - svu current

  bump-version:
    desc: Bump version (patch, minor, or major)
    vars:
      VERSION_TYPE: patch
    deps: [lint, build, test]
    cmds:
      - CURRENT_TAG=$(sh "svu current")
      - NEXT_TAG=$(sh "svu {{.VERSION_TYPE}}")
      - echo "Bumping version from $CURRENT_TAG to $NEXT_TAG"
      - task changelog -- NEXT_TAG=$NEXT_TAG
      - git add CHANGELOG.md
      - git commit -am "Release $NEXT_TAG"
      - git tag -a $NEXT_TAG -m "Release $NEXT_TAG"
      - git push origin $NEXT_TAG

  bump-patch:
    desc: Bump patch version
    vars:
      VERSION_TYPE: patch
    cmds:
      - task bump-version

  bump-minor:
    desc: Bump minor version
    vars:
      VERSION_TYPE: minor
    cmds:
      - task bump-version

  bump-major:
    desc: Bump major version
    vars:
      VERSION_TYPE: major
    cmds:
      - task bump-version

  changelog:
    desc: Generate changelog
    vars:
      NEXT_TAG: ""
    cmds:
      - git config --global --add safe.directory /workspace
      - git-chglog --next-tag {{.NEXT_TAG}} -o CHANGELOG.md

  release:
    desc: Create a new release
    deps: [lint, test]
    cmds:
      - goreleaser release --clean

  release-snapshot:
    desc: Create a snapshot release
    deps: [lint, test]
    cmds:
      - goreleaser release --snapshot --clean

  pre-commit-install:
    desc: Install pre-commit hooks
    cmds:
      - pre-commit clean
      - git config --global --add safe.directory /workspace
      - pre-commit install

  pre-commit-run:
    desc: Run pre-commit hooks on all files
    deps: [pre-commit-install]
    cmds:
      - pre-commit run --all-files

  pre-commit-update:
    desc: Update pre-commit hooks to latest versions
    cmds:
      - pre-commit autoupdate
